// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stolovaya.API.Data;

#nullable disable

namespace Stolovaya.API.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    partial class StoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Stolovaya.API.Models.Store.Dish", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCooking")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Identity");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("Stolovaya.API.Models.Store.DishStore", b =>
                {
                    b.Property<Guid>("StoreId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DishId")
                        .HasColumnType("TEXT");

                    b.HasKey("StoreId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("DishStores");
                });

            modelBuilder.Entity("Stolovaya.API.Models.Store.Ingredient", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid?>("DishIdentity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Identity");

                    b.HasIndex("DishIdentity");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Stolovaya.API.Models.Store.Store", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("TEXT");

                    b.HasKey("Identity");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Stolovaya.API.Models.Store.DishStore", b =>
                {
                    b.HasOne("Stolovaya.API.Models.Store.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stolovaya.API.Models.Store.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Stolovaya.API.Models.Store.Ingredient", b =>
                {
                    b.HasOne("Stolovaya.API.Models.Store.Dish", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("DishIdentity");
                });

            modelBuilder.Entity("Stolovaya.API.Models.Store.Dish", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
